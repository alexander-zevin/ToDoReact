{"version":3,"sources":["components/Main/Add/Add.tsx","components/Main/Add/AddContainer.tsx","store/actions.ts","store/constants.ts","components/Main/List/RowEdit/RowEdit.tsx","components/Main/List/RowEdit/RowEditContainer.tsx","components/Main/List/Row/Row.tsx","components/Main/List/Row/RowContainer.tsx","components/Main/List/List.tsx","components/Main/List/ListContainer.tsx","components/Main/Message/Message.tsx","components/Main/Paginator/Paginator.tsx","components/Main/Main.tsx","components/Main/MainContainer.tsx","App.tsx","serviceWorker.ts","theme.ts","store/reducer.ts","store/store.ts","index.tsx","components/Main/Add/Add.module.css","components/Main/List/List.module.css","components/Main/Main.module.css","components/Main/List/RowEdit/RowEdit.module.css","components/Main/List/Row/Row.module.css","components/Main/Paginator/Paginator.module.css"],"names":["Add","textFieldValue","textFieldChange","addTask","Box","className","styles","TextField","label","fullWidth","size","value","onChange","e","target","variant","ml","Button","btn","onClick","color","AddContainer","tasks","dispatch","useDispatch","useState","setTextFieldValue","text","k","newId","Math","floor","random","length","i","id","type","addTaskActionCreator","RowEdit","props","Item","flexGrow","pl","InputBase","placeholder","autoFocus","inputValue","setInputValue","Tooltip","title","placement","IconButton","saveTask","Divider","orientation","flexItem","setEditModeIndex","RowEditContainer","saveTaskActionCreator","setOpenMessage","open","message","Row","onMouseMove","setActiveRowIndex","onMouseLeave","isPerformed","Checkbox","checked","setPerformed","component","style","textDecoration","textOverflow","overflow","activeRowIndex","deleteTasks","RowContainer","setPerformedActionCreator","deleteTaskActionCreator","List","empty","slice","leftPortionPageNumber","rightPortionPageNumber","map","item","editModeIndex","ListContainer","pageNumber","pageSize","TransitionRight","Slide","direction","Message","Snackbar","openMessage","onClose","autoHideDuration","anchorOrigin","vertical","horizontal","TransitionComponent","Alert","severity","Paginator","pagesCount","ceil","Pagination","count","paginatorChange","Main","Paper","elevation","MainContainer","useSelector","state","toDo","shallowEqual","setPageNumber","event","App","Boolean","window","location","hostname","match","theme","createMuiTheme","palette","primary","main","indigo","success","initialState","rootReducer","combineReducers","action","filter","store","createStore","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","module","exports"],"mappings":"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","file":"static/js/main.37558989.chunk.js","sourcesContent":["import React, {FC} from 'react';\r\nimport {TextField, Button, Box} from \"@material-ui/core\";\r\nimport {IAddProps} from \"./AddTypes\";\r\nimport styles from './Add.module.css'\r\n\r\nconst Add: FC<IAddProps> = ({textFieldValue, textFieldChange, addTask}) => {\r\n\r\n    return (\r\n        <Box className={styles.Add}>\r\n            <TextField\r\n                label='Add task text'\r\n                fullWidth\r\n                size='small'\r\n                value={textFieldValue}\r\n                onChange={(e) => {textFieldChange(e.target.value)}}\r\n                variant=\"outlined\"\r\n            />\r\n            <Box ml={2}>\r\n                <Button\r\n                    className={styles.btn}\r\n                    onClick={() => {addTask(textFieldValue)}}\r\n                    variant=\"contained\"\r\n                    color=\"primary\">ADD\r\n                </Button>\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Add;","import React, {FC, useState} from 'react';\r\nimport Add from \"./Add\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {IAddContainerProps, IAddTasks, ITextFieldChange} from \"./AddTypes\";\r\nimport {addTaskActionCreator} from \"../../../store/actions\";\r\n\r\nconst AddContainer: FC<IAddContainerProps> = ({tasks}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [textFieldValue, setTextFieldValue] = useState<string>('');\r\n\r\n    const textFieldChange: ITextFieldChange = value => {\r\n        setTextFieldValue(value)\r\n    };\r\n\r\n    const addTask: IAddTasks = text => {\r\n        if (text !== '') {\r\n            let k, newId;\r\n            do {\r\n                k = 0;\r\n                newId = Math.floor(Math.random() * Math.floor(tasks.length + 1));\r\n                for (let i = 0; i < tasks.length; i++) {\r\n                    if (tasks[i].id === newId) k++\r\n                }\r\n            } while (k !== 0);\r\n            dispatch(addTaskActionCreator(newId, text));\r\n            textFieldChange('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Add\r\n            textFieldValue={textFieldValue}\r\n            textFieldChange={textFieldChange}\r\n            addTask={addTask}\r\n        />\r\n    )\r\n};\r\n\r\nexport default AddContainer;","import {ADD_TASK, DELETE_TASK, SAVE_TASK, SET_PERFORMED, SET_TASKS} from \"./constants\";\r\nimport {ITask} from \"./types\";\r\n\r\ninterface IAddTaskAction { type: typeof ADD_TASK, id: number, text: string }\r\nexport const addTaskActionCreator = (id: number, text: string): IAddTaskAction => ({type: ADD_TASK, id, text});\r\n\r\ninterface IDeleteTaskAction {type: typeof DELETE_TASK, id: number}\r\nexport const deleteTaskActionCreator = (id: number): IDeleteTaskAction => ({type: DELETE_TASK, id});\r\n\r\ninterface ISetPerformedAction {type: typeof SET_PERFORMED, id: number}\r\nexport const setPerformedActionCreator = (id: number): ISetPerformedAction => ({type: SET_PERFORMED, id});\r\n\r\ninterface ISaveTaskAction {type: typeof SAVE_TASK, id: number, text: string}\r\nexport const saveTaskActionCreator = (id: number, text: string): ISaveTaskAction => ({type: SAVE_TASK, id, text});\r\n\r\ninterface ISetTasksAction {type: typeof SET_TASKS, tasks: Array<ITask>}\r\nexport const setTasksActionCreator = (tasks: Array<ITask>): ISetTasksAction => ({type: SET_TASKS, tasks});\r\n\r\nexport type ActionType = IAddTaskAction | IDeleteTaskAction | ISetPerformedAction | ISaveTaskAction | ISetTasksAction;\r\n\r\n","export const ADD_TASK = 'ADD_TASK';\r\nexport const DELETE_TASK = 'DELETE_TASK';\r\nexport const SET_PERFORMED = 'SET_PERFORMED';\r\nexport const SAVE_TASK = 'SAVE_TASK';\r\nexport const SET_TASKS = 'SET_TASKS';\r\n","import React, {FC} from 'react';\r\nimport styles from './RowEdit.module.css';\r\nimport {Box, IconButton, Divider, Tooltip, InputBase} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {IRowEditProps} from \"./RowEditTypes\";\r\n\r\nconst RowEdit: FC<IRowEditProps> = props => {\r\n    return (\r\n        <Box className={styles.Item}>\r\n            <Box flexGrow={1} pl={2}>\r\n                <InputBase\r\n                    placeholder='Change the task text'\r\n                    autoFocus\r\n                    value={props.inputValue}\r\n                    onChange={(e) => {props.setInputValue(e.target.value)}}\r\n                    fullWidth\r\n                />\r\n            </Box>\r\n            <Tooltip title=\"Save\" placement=\"top\">\r\n                <IconButton onClick={() => {props.saveTask(props.id, props.inputValue)}}>\r\n                    <SaveIcon />\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Divider orientation=\"vertical\" flexItem/>\r\n            <Tooltip title=\"Cancel\" placement=\"top\">\r\n                <IconButton onClick={() => {props.setEditModeIndex(null)}}>\r\n                    <CancelIcon />\r\n                </IconButton>\r\n            </Tooltip>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default RowEdit;","import React, {FC, useState} from 'react';\r\nimport {IRowEditContainerProps, ISaveTask} from \"./RowEditTypes\";\r\nimport RowEdit from \"./RowEdit\";\r\nimport {saveTaskActionCreator} from \"../../../../store/actions\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nconst RowEditContainer: FC<IRowEditContainerProps> = props => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [inputValue, setInputValue] = useState<string>(props.text);\r\n\r\n    const saveTask: ISaveTask = (id, text) => {\r\n        dispatch(saveTaskActionCreator(id, text));\r\n        props.setEditModeIndex(null);\r\n        props.setOpenMessage({open: true, message: 'Saving was successful!'});\r\n    };\r\n\r\n    return (\r\n        <RowEdit\r\n            inputValue={inputValue}\r\n            setInputValue={setInputValue}\r\n            saveTask={saveTask}\r\n            {...props}\r\n        />\r\n    );\r\n};\r\n\r\nexport default RowEditContainer;","import React, {FC} from 'react';\r\nimport styles from './Row.module.css';\r\nimport {Box, Checkbox, IconButton, Divider, Tooltip} from \"@material-ui/core\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport {IRowProps} from \"./RowTypes\";\r\n\r\nconst Row: FC<IRowProps> = props => {\r\n    return (\r\n        <Box\r\n            className={styles.Item}\r\n            onMouseMove={() => {props.setActiveRowIndex(props.id)}}\r\n            onMouseLeave={() => {props.setActiveRowIndex(null)}}\r\n            title={props.text}\r\n        >\r\n            <Tooltip title={props.isPerformed ? 'Performed' : 'Not performed'} placement=\"top\">\r\n                <Checkbox color='primary' checked={props.isPerformed} onChange={() => {props.setPerformed(props.id)}}/>\r\n            </Tooltip>\r\n            <Box\r\n                component='div'\r\n                flexGrow={1}\r\n                style={{textDecoration: props.isPerformed ? 'line-through' : 'none'}}\r\n                textOverflow=\"ellipsis\"\r\n                overflow=\"hidden\"\r\n            >\r\n                {props.text}\r\n            </Box>\r\n            {props.activeRowIndex === props.id &&\r\n                <>\r\n                    <Tooltip title=\"Edit\" placement=\"top\">\r\n                        <IconButton onClick={() => {props.setEditModeIndex(props.id)}}>\r\n                            <EditIcon/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    <Divider orientation=\"vertical\" flexItem/>\r\n                    <Tooltip title=\"Delete\" placement=\"top\">\r\n                        <IconButton onClick={() => {props.deleteTasks(props.id)}}>\r\n                            <DeleteIcon/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </>\r\n            }\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Row;","import React, {FC} from 'react';\r\nimport {IDeleteTasks, IRowContainerProps, ISetPerformed} from \"./RowTypes\";\r\nimport Row from \"./Row\";\r\nimport {deleteTaskActionCreator, setPerformedActionCreator} from \"../../../../store/actions\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nconst RowContainer: FC<IRowContainerProps> = props => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const setPerformed: ISetPerformed = id => {\r\n        dispatch(setPerformedActionCreator(id))\r\n    };\r\n\r\n    const deleteTasks: IDeleteTasks = id => {\r\n        dispatch(deleteTaskActionCreator(id));\r\n        props.setOpenMessage({open: true, message: 'Uninstall was successful'});\r\n    };\r\n\r\n    return (\r\n        <Row\r\n            setPerformed={setPerformed}\r\n            deleteTasks={deleteTasks}\r\n            {...props}\r\n        />\r\n    );\r\n};\r\n\r\nexport default RowContainer;","import React, {FC} from 'react';\r\nimport {Box} from \"@material-ui/core\";\r\nimport {IListProps} from \"./ListTypes\";\r\nimport styles from './List.module.css'\r\nimport RowEditContainer from \"./RowEdit/RowEditContainer\";\r\nimport RowContainer from \"./Row/RowContainer\";\r\n\r\nconst List: FC<IListProps> = props => {\r\n    return (\r\n        <Box className={styles.List}>\r\n            {props.tasks.length === 0 &&\r\n                <Box className={styles.empty}><span>It's empty here...</span></Box>\r\n            }\r\n            {props.tasks.slice(props.leftPortionPageNumber, props.rightPortionPageNumber).map(item =>\r\n                props.editModeIndex !== item.id ?\r\n                    <RowContainer\r\n                        id={item.id}\r\n                        text={item.text}\r\n                        isPerformed={item.isPerformed}\r\n                        editModeIndex={props.editModeIndex}\r\n                        setEditModeIndex={props.setEditModeIndex}\r\n                        activeRowIndex={props.activeRowIndex}\r\n                        setActiveRowIndex={props.setActiveRowIndex}\r\n                        setOpenMessage={props.setOpenMessage}\r\n                    />\r\n                    :\r\n                    <RowEditContainer\r\n                        id={item.id}\r\n                        text={item.text}\r\n                        setEditModeIndex={props.setEditModeIndex}\r\n                        setOpenMessage={props.setOpenMessage}\r\n                    />\r\n            )}\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default List;","import React, {FC, useState} from 'react';\r\nimport List from \"./List\";\r\nimport {IListContainerProps} from \"./ListTypes\";\r\n\r\nconst ListContainer: FC<IListContainerProps> = props => {\r\n\r\n    const [editModeIndex, setEditModeIndex] = useState<number | null>(null);\r\n\r\n    const [activeRowIndex, setActiveRowIndex] = useState<number | null>(null);\r\n\r\n    const leftPortionPageNumber = (props.pageNumber - 1) * props.pageSize;\r\n    const rightPortionPageNumber = props.pageNumber * props.pageSize;\r\n\r\n    return (\r\n        <List\r\n            tasks={props.tasks}\r\n            editModeIndex={editModeIndex}\r\n            setEditModeIndex={setEditModeIndex}\r\n            activeRowIndex={activeRowIndex}\r\n            setActiveRowIndex={setActiveRowIndex}\r\n            setOpenMessage={props.setOpenMessage}\r\n            pageNumber={props.pageNumber}\r\n            pageSize={props.pageSize}\r\n            leftPortionPageNumber={leftPortionPageNumber}\r\n            rightPortionPageNumber={rightPortionPageNumber}\r\n        />\r\n    );\r\n};\r\n\r\nexport default ListContainer;","import React, {FC} from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport {IMessageProps} from \"./MessageTypes\";\r\nimport {Slide, SlideProps} from \"@material-ui/core\";\r\n\r\ntype TransitionProps = Omit<SlideProps, 'direction'>;\r\n\r\nfunction TransitionRight(props: TransitionProps) {\r\n    return <Slide {...props} direction=\"right\" />;\r\n}\r\n\r\nconst Message: FC<IMessageProps> = props => {\r\n    return (\r\n        <Snackbar\r\n            open={props.openMessage.open}\r\n            onClose={() => {props.setOpenMessage({open: false, message: null})}}\r\n            autoHideDuration={3000}\r\n            anchorOrigin={{vertical: 'bottom', horizontal: 'left'}}\r\n            TransitionComponent={TransitionRight}\r\n        >\r\n            <Alert\r\n                onClose={() => {props.setOpenMessage({open: false, message: null})}}\r\n                severity=\"success\"\r\n                variant=\"filled\"\r\n            >\r\n                {props.openMessage.message}\r\n            </Alert>\r\n        </Snackbar>\r\n    );\r\n};\r\n\r\nexport default Message;","import React, {FC} from 'react';\r\nimport {Pagination} from \"@material-ui/lab\";\r\nimport {IPaginatorProps} from \"./PaginatorTypes\";\r\nimport {Box} from \"@material-ui/core\";\r\nimport styles from './Paginator.module.css';\r\n\r\nconst Paginator: FC<IPaginatorProps> = props => {\r\n\r\n    const pagesCount = Math.ceil(props.tasks.length / props.pageSize);\r\n\r\n    return (\r\n        <Box className={styles.Paginator}>\r\n            <Pagination count={pagesCount} onChange={props.paginatorChange} color=\"primary\"/>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Paginator;","import React, {FC} from 'react';\r\nimport styles from './Main.module.css';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport AddContainer from \"./Add/AddContainer\";\r\nimport ListContainer from \"./List/ListContainer\";\r\nimport Message from \"./Message/Message\";\r\nimport {IMainProps} from \"./MainTypes\";\r\nimport Paginator from \"./Paginator/Paginator\";\r\n\r\nconst Main: FC<IMainProps> = props => {\r\n    return (\r\n        <Paper className={styles.Paper} elevation={3}>\r\n            <AddContainer tasks={props.tasks}/>\r\n            <ListContainer\r\n                setOpenMessage={props.setOpenMessage}\r\n                tasks={props.tasks}\r\n                pageNumber={props.pageNumber}\r\n                pageSize={props.pageSize}\r\n            />\r\n            <Message\r\n                openMessage={props.openMessage}\r\n                setOpenMessage={props.setOpenMessage}\r\n            />\r\n            <Paginator\r\n                tasks={props.tasks}\r\n                paginatorChange={props.paginatorChange}\r\n                pageSize={props.pageSize}\r\n            />\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default Main;","import React, {useState} from 'react';\r\nimport {IMessage, IPaginatorChange} from \"./MainTypes\";\r\nimport {shallowEqual, useSelector} from \"react-redux\";\r\nimport {RootStateType} from \"../../store/store\";\r\nimport Main from \"./Main\";\r\n\r\nconst MainContainer = () => {\r\n\r\n    const {tasks} = useSelector((state: RootStateType) => state.toDo, shallowEqual);\r\n\r\n    const [openMessage, setOpenMessage] = useState<IMessage>({open: false, message: null});\r\n\r\n    const pageSize = 11;\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n    const paginatorChange: IPaginatorChange = (event, value) => {\r\n        setPageNumber(value);\r\n    };\r\n\r\n    return (\r\n        <Main\r\n            tasks={tasks}\r\n            openMessage={openMessage}\r\n            setOpenMessage={setOpenMessage}\r\n            pageSize={pageSize}\r\n            pageNumber={pageNumber}\r\n            paginatorChange={paginatorChange}\r\n        />\r\n    );\r\n};\r\n\r\nexport default MainContainer;","import React from 'react';\nimport './App.css';\nimport MainContainer from \"./components/Main/MainContainer\";\n\nconst App = () => {\n    return (\n        <div className=\"App\">\n            <MainContainer/>\n        </div>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {createMuiTheme} from \"@material-ui/core\";\r\nimport {indigo} from \"@material-ui/core/colors\";\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: indigo[400]\r\n        },\r\n        success: {\r\n            main: indigo[400]\r\n        }\r\n    }\r\n});\r\n\r\nexport default theme","import {ADD_TASK, DELETE_TASK, SAVE_TASK, SET_PERFORMED, SET_TASKS} from \"./constants\";\r\nimport {IState} from './types'\r\nimport {ActionType} from \"./actions\";\r\n\r\nconst initialState: IState = {\r\n    tasks: [\r\n        /*{id: 1, text: 'Съездить за продуктами', isPerformed: false},\r\n        {id: 2, text: 'Искупать собаку', isPerformed: false},\r\n        {id: 3, text: 'Помыть полы', isPerformed: false},\r\n        {id: 4, text: 'Посмотреть сериал \\\"Мир дикого запада\\\"', isPerformed: true},\r\n        {id: 5, text: 'Вынести мусор', isPerformed: false},\r\n        {id: 6, text: 'Помочь другу с работой', isPerformed: false},\r\n        {id: 7, text: 'Tex3', isPerformed: false},\r\n        {id: 8, text: 'Tex4', isPerformed: false},\r\n        {id: 9, text: 'Text5', isPerformed: false},\r\n        {id: 10, text: 'Text6', isPerformed: false},\r\n        {id: 11, text: 'Text7', isPerformed: false},\r\n        {id: 12, text: 'Text8', isPerformed: false},\r\n        {id: 13, text: 'Text9', isPerformed: false},\r\n        {id: 14, text: 'Text10', isPerformed: false},\r\n        {id: 15, text: 'Text11', isPerformed: false},\r\n        {id: 16, text: 'Text12', isPerformed: false}*/\r\n    ]\r\n};\r\n\r\nexport const reducer = (state = initialState, action: ActionType): IState => {\r\n    switch (action.type) {\r\n        case ADD_TASK: {\r\n            return {\r\n                ...state,\r\n                tasks: [...state.tasks, {id: action.id, text: action.text, isPerformed: false}]\r\n            }\r\n        }\r\n        case DELETE_TASK: {\r\n            return {\r\n                ...state,\r\n                tasks: state.tasks.filter(i => i.id !== action.id)\r\n            }\r\n        }\r\n        case SET_PERFORMED: {\r\n            return {\r\n                ...state,\r\n                tasks: state.tasks.map(i => {\r\n                    if (i.id === action.id) {\r\n                        return {...i, isPerformed: !i.isPerformed}\r\n                    } else {\r\n                        return {...i}\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        case SAVE_TASK: {\r\n            return {\r\n                ...state,\r\n                tasks: state.tasks.map(i =>\r\n                    i.id === action.id\r\n                        ? {...i, text: action.text}\r\n                        : {...i}\r\n                )\r\n            }\r\n        }\r\n        case SET_TASKS: {\r\n            return {\r\n                ...state, tasks: action.tasks\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n};","import {createStore, combineReducers} from 'redux';\r\nimport {reducer} from \"./reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    toDo: reducer\r\n});\r\n\r\nexport type RootStateType = ReturnType<typeof rootReducer> //ReturnType cоздаёт тип, состоящий из возвращаемого типа функции RootReducer\r\n\r\nexport const store = createStore(rootReducer);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from \"./theme\";\nimport {Provider as StoreProvider} from \"react-redux\";\nimport {store} from \"./store/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <StoreProvider store={store}>\n            <ThemeProvider theme={theme}>\n                <App/>\n            </ThemeProvider>\n        </StoreProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Add\":\"Add_Add__fr6Ar\",\"btn\":\"Add_btn__a0WMD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"List_List__2bHYY\",\"empty\":\"List_empty__3gKid\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Paper\":\"Main_Paper__1D9LB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Item\":\"RowEdit_Item__1b8hj\",\"Divider\":\"RowEdit_Divider__14jz7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Item\":\"Row_Item__2xJ0Q\",\"Divider\":\"Row_Divider__X6JUM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Paginator\":\"Paginator_Paginator__33pke\"};"],"sourceRoot":""}