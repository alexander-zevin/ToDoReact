{"version":3,"sources":["components/Main/Add/AddStyles.ts","components/Main/Add/Add.tsx","components/Main/Add/AddContainer.tsx","store/actions.ts","store/constants.ts","components/Main/List/RowEdit/RowEditStyles.ts","components/Main/List/RowEdit/RowEdit.tsx","components/Main/List/RowEdit/RowEditContainer.tsx","components/Main/List/Row/ViewContent/ViewContent.tsx","components/Main/List/Row/RowStyles.ts","components/Main/List/Row/Row.tsx","components/Main/List/Row/RowContainer.tsx","components/Main/List/ListStyles.ts","components/Main/List/List.tsx","components/Main/List/ListContainer.tsx","components/Main/Message/Message.tsx","components/Main/Paginator/PaginatorStyles.ts","components/Main/Paginator/Paginator.tsx","components/Main/MainStyles.ts","components/Main/Control/ControlStyles.ts","components/Main/Control/Control.tsx","components/Main/Control/ControlContainer.tsx","components/Main/Main.tsx","components/Main/MainContainer.tsx","api/localStorageAPI.ts","App.tsx","serviceWorker.ts","theme.ts","store/reducer.ts","store/store.ts","index.tsx","components/Main/List/Row/ViewContent/ViewContent.module.css"],"names":["useStyles","makeStyles","root","display","alignItems","padding","borderRadius","btn","height","Add","textFieldValue","textFieldChange","addTask","classes","Box","className","TextField","label","fullWidth","size","value","onChange","event","target","variant","onKeyUp","keyCode","ml","Button","onClick","color","AddContainer","tasks","dispatch","useDispatch","useState","setTextFieldValue","text","matches","newId","newDate","Date","toISOString","Math","floor","random","length","i","id","date","type","addTaskActionCreator","boxSizing","borderBottom","boxShadow","RowEdit","props","flexGrow","pl","InputBase","placeholder","autoFocus","inputValue","e","setInputValue","saveTask","Tooltip","title","placement","IconButton","Divider","orientation","flexItem","setEditModeIndex","RowEditContainer","saveTaskActionCreator","setActiveRowIndex","setOpenMessage","open","message","PaperComponent","handle","Paper","ViewContent","fullScreen","useMediaQuery","theme","breakpoints","down","React","setOpen","handleClose","Transition","forwardRef","ref","Slide","direction","Dialog","onClose","TransitionComponent","DialogTitle","style","cursor","DialogContent","DialogContentText","styles","DialogActions","star","position","right","whiteSpace","textDecoration","stylesProps","minWidth","margin","Row","isPerformed","onMouseMove","onMouseLeave","Checkbox","checked","setPerformed","isTagged","setTag","textOverflow","overflow","activeRowIndex","deleteTasks","RowContainer","setPerformedActionCreator","deleteTaskActionCreator","setTagActionCreator","borderTop","empty","justifyContent","backgroundColor","border","List","slice","leftPortionPageNumber","rightPortionPageNumber","map","item","editModeIndex","convertDate","key","getDate","getMonth","ListContainer","pageNumber","pageSize","filterTasks","filter","TransitionRight","Message","Snackbar","openMessage","autoHideDuration","anchorOrigin","vertical","horizontal","Alert","severity","Paginator","pagesCount","ceil","Pagination","count","paginatorChange","width","flexDirection","Control","handleButtonClick","startIcon","Typography","Menu","anchorEl","keepMounted","Boolean","options","option","index","MenuItem","selected","selectedIndex","handleMenuItemClick","ControlContainer","setAnchorEl","setSelectedIndex","currentTarget","Main","elevation","state","MainContainer","useSelector","toDo","shallowEqual","useEffect","stateLocalStorage","JSON","parse","localStorage","getItem","setStateActionCreator","setItem","stringify","setToLocalStorage","setPageNumber","App","window","location","hostname","match","createMuiTheme","palette","primary","main","indigo","success","initialState","rootReducer","combineReducers","action","store","createStore","ReactDOM","render","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","module","exports"],"mappings":"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","file":"static/js/main.ebc3834a.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        alignItems: 'stretch',\r\n        padding: '16px',\r\n        borderRadius: '4px 4px 0 0'\r\n    },\r\n    btn: {\r\n        height: '100%'\r\n    }\r\n});\r\n\r\nexport default useStyles;","import React, {FC} from 'react';\r\nimport {TextField, Button, Box} from \"@material-ui/core\";\r\nimport {IAddProps} from \"./AddTypes\";\r\nimport useStyles from \"./AddStyles\";\r\n\r\nconst Add: FC<IAddProps> = ({textFieldValue, textFieldChange, addTask}) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Box className={classes.root}>\r\n            <TextField\r\n                label='Add task text'\r\n                fullWidth\r\n                size='small'\r\n                value={textFieldValue}\r\n                onChange={(event) => {textFieldChange(event.target.value)}}\r\n                variant=\"outlined\"\r\n                onKeyUp={event => {event.keyCode === 13 && addTask(textFieldValue)}}\r\n            />\r\n            <Box ml={2}>\r\n                <Button\r\n                    className={classes.btn}\r\n                    onClick={() => {addTask(textFieldValue)}}\r\n                    variant=\"contained\"\r\n                    color=\"primary\">ADD\r\n                </Button>\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Add;","import React, {FC, useState} from 'react';\r\nimport Add from \"./Add\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {IAddContainerProps, IAddTasks, ITextFieldChange} from \"./AddTypes\";\r\nimport {addTaskActionCreator} from \"../../../store/actions\";\r\n\r\nconst AddContainer: FC<IAddContainerProps> = ({tasks}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [textFieldValue, setTextFieldValue] = useState<string>('');\r\n\r\n    const textFieldChange: ITextFieldChange = value => {\r\n        setTextFieldValue(value)\r\n    };\r\n\r\n    const addTask: IAddTasks = text => {\r\n        if (text !== '') {\r\n            const newDate: string = new Date().toISOString();\r\n            let matches: number;\r\n            let newId: number;\r\n            do {\r\n                matches = 0;\r\n                newId = Math.floor(Math.random() * Math.floor(tasks.length + 1));\r\n                for (let i: number = 0; i < tasks.length; i++) {\r\n                    if (tasks[i].id === newId) matches++\r\n                }\r\n            } while (matches !== 0);\r\n            dispatch(addTaskActionCreator(newId, text, newDate));\r\n            textFieldChange('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Add\r\n            textFieldValue={textFieldValue}\r\n            textFieldChange={textFieldChange}\r\n            addTask={addTask}\r\n        />\r\n    )\r\n};\r\n\r\nexport default AddContainer;","import {ADD_TASK, DELETE_TASK, SAVE_TASK, SET_FILTER, SET_PERFORMED, SET_STATE, SET_TAG} from \"./constants\";\r\nimport {IState} from \"./types\";\r\n\r\ninterface IAddTaskAction { type: typeof ADD_TASK, id: number, text: string, date: string}\r\nexport const addTaskActionCreator = (id: number, text: string, date: string): IAddTaskAction => ({type: ADD_TASK, id, text, date});\r\n\r\ninterface IDeleteTaskAction {type: typeof DELETE_TASK, id: number}\r\nexport const deleteTaskActionCreator = (id: number): IDeleteTaskAction => ({type: DELETE_TASK, id});\r\n\r\ninterface ISetPerformedAction {type: typeof SET_PERFORMED, id: number}\r\nexport const setPerformedActionCreator = (id: number): ISetPerformedAction => ({type: SET_PERFORMED, id});\r\n\r\ninterface ISaveTaskAction {type: typeof SAVE_TASK, id: number, text: string}\r\nexport const saveTaskActionCreator = (id: number, text: string): ISaveTaskAction => ({type: SAVE_TASK, id, text});\r\n\r\ninterface ISetStateAction {type: typeof SET_STATE, state: IState}\r\nexport const setStateActionCreator = (state: IState): ISetStateAction => ({type: SET_STATE, state});\r\n\r\ninterface ISetTagAction {type: typeof SET_TAG, id: number}\r\nexport const setTagActionCreator = (id: number): ISetTagAction => ({type: SET_TAG, id});\r\n\r\ninterface ISetFilterAction {type: typeof SET_FILTER, option: string}\r\nexport const setFilterActionCreator = (option: string): ISetFilterAction => ({type: SET_FILTER, option});\r\n\r\nexport type ActionType = IAddTaskAction | IDeleteTaskAction | ISetPerformedAction | ISaveTaskAction | ISetStateAction\r\n    | ISetTagAction | ISetFilterAction;\r\n\r\n","export const ADD_TASK = 'ADD_TASK';\r\nexport const DELETE_TASK = 'DELETE_TASK';\r\nexport const SET_PERFORMED = 'SET_PERFORMED';\r\nexport const SAVE_TASK = 'SAVE_TASK';\r\nexport const SET_STATE = 'SET_STATE';\r\nexport const SET_TAG = 'SET_TAG';\r\nexport const SET_FILTER = 'SET_FILTER';\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        height: '50px',\r\n        padding: `8px 0`,\r\n        boxSizing: 'border-box',\r\n        borderBottom: '1px solid transparent',\r\n        boxShadow: '0 2px 5px #757575'\r\n    }\r\n});\r\n\r\nexport default useStyles;","import React, {FC} from 'react';\r\nimport {Box, IconButton, Divider, Tooltip, InputBase} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {IRowEditProps} from \"./RowEditTypes\";\r\nimport useStyles from \"./RowEditStyles\";\r\n\r\nconst RowEdit: FC<IRowEditProps> = props => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Box flexGrow={1} pl={2}>\r\n                <InputBase\r\n                    placeholder='Change the task text'\r\n                    autoFocus\r\n                    value={props.inputValue}\r\n                    onChange={e => {props.setInputValue(e.target.value)}}\r\n                    onKeyUp={event => {event.keyCode === 13 && props.saveTask(props.id, props.inputValue)}}\r\n                    fullWidth\r\n                />\r\n            </Box>\r\n            <Tooltip title=\"Save\" placement=\"top\">\r\n                <IconButton onClick={() => {props.saveTask(props.id, props.inputValue)}}>\r\n                    <SaveIcon />\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Divider orientation=\"vertical\" flexItem/>\r\n            <Tooltip title=\"Cancel\" placement=\"top\">\r\n                <IconButton onClick={() => {props.setEditModeIndex(null)}}>\r\n                    <CancelIcon />\r\n                </IconButton>\r\n            </Tooltip>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default RowEdit;","import React, {FC, useState} from 'react';\r\nimport {IRowEditContainerProps, ISaveTask} from \"./RowEditTypes\";\r\nimport RowEdit from \"./RowEdit\";\r\nimport {saveTaskActionCreator} from \"../../../../store/actions\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nconst RowEditContainer: FC<IRowEditContainerProps> = props => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [inputValue, setInputValue] = useState<string>(props.text);\r\n\r\n    const saveTask: ISaveTask = (id, text) => {\r\n        dispatch(saveTaskActionCreator(id, text));\r\n        props.setEditModeIndex(null);\r\n        props.setActiveRowIndex(null);\r\n        props.setOpenMessage({open: true, message: 'Saving was successful!'});\r\n    };\r\n\r\n    return (\r\n        <RowEdit\r\n            inputValue={inputValue}\r\n            setInputValue={setInputValue}\r\n            saveTask={saveTask}\r\n            {...props}\r\n        />\r\n    );\r\n};\r\n\r\nexport default RowEditContainer;","import React, {FC} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Paper, { PaperProps } from '@material-ui/core/Paper';\r\nimport Draggable from 'react-draggable';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport {Theme, Tooltip} from \"@material-ui/core\";\r\nimport {IViewContentProps} from \"./ViewContentTypes\";\r\nimport styles from './ViewContent.module.css'\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport {TransitionProps} from \"@material-ui/core/transitions\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n\r\nfunction PaperComponent(props: PaperProps) {\r\n\r\n    return (\r\n        <Draggable\r\n            handle=\"#draggable-dialog-title\"\r\n        >\r\n            <Paper {...props} />\r\n        </Draggable>\r\n    );\r\n}\r\n\r\nconst ViewContent: FC<IViewContentProps> = props => {\r\n\r\n    const fullScreen: boolean = useMediaQuery((theme: Theme) => theme.breakpoints.down('sm')); // > 600px\r\n\r\n    const [open, setOpen] = React.useState<boolean>(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        props.setActiveRowIndex(null);\r\n    };\r\n\r\n    const Transition = React.forwardRef(function Transition(\r\n        props: TransitionProps & { children?: React.ReactElement<any, any> },\r\n        ref: React.Ref<unknown>,\r\n    ) {\r\n        return <Slide direction=\"up\" ref={ref} {...props} />;\r\n    });\r\n\r\n    return (\r\n        <div >\r\n            <Tooltip title='View content' placement=\"top\">\r\n                <IconButton onClick={handleClickOpen}>\r\n                    <VisibilityIcon />\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                PaperComponent={PaperComponent}\r\n                TransitionComponent={Transition}\r\n                fullScreen={fullScreen}\r\n            >\r\n                <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n                    View content\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText className={styles.ViewContent}>\r\n                        {props.text}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={handleClose} color=\"primary\">\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ViewContent;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\ninterface IStylesProps {\r\n    textDecoration: string\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        height: '50px',\r\n        padding: '8px 0',\r\n        boxSizing: 'border-box',\r\n        borderBottom: '1px solid #eeeeee',\r\n        '&:hover': {\r\n            borderBottom: '1px solid transparent',\r\n            boxShadow: '0 2px 5px #757575'\r\n        }\r\n    },\r\n    star: {\r\n        position: 'relative',\r\n        right: '12px'\r\n    },\r\n    text: {\r\n        position: 'relative',\r\n        right: '12px',\r\n        whiteSpace: 'nowrap',\r\n        flexGrow: 1,\r\n        textDecoration: (stylesProps: IStylesProps): string => stylesProps.textDecoration\r\n    },\r\n    date: {\r\n        minWidth: '50px',\r\n        margin: '0 8px'\r\n    }\r\n});\r\n\r\nexport default useStyles;","import React, {FC} from 'react';\r\nimport {Box, Checkbox, IconButton, Divider, Tooltip} from \"@material-ui/core\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport {IRowProps} from \"./RowTypes\";\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport ViewContent from \"./ViewContent/ViewContent\";\r\nimport useStyles from \"./RowStyles\";\r\n\r\nconst Row: FC<IRowProps> = props => {\r\n\r\n    const stylesProps = {textDecoration: props.isPerformed ? 'line-through' : 'none'};\r\n    const classes = useStyles(stylesProps);\r\n\r\n    return (\r\n        <div\r\n            className={classes.root}\r\n            onMouseMove={() => {props.setActiveRowIndex(props.id)}}\r\n            onMouseLeave={() => {props.setActiveRowIndex(null)}}\r\n            id='draggable-row'\r\n        >\r\n            <Tooltip title={props.isPerformed ? 'Performed' : 'Not performed'} placement=\"top\">\r\n                <Checkbox color='primary' checked={props.isPerformed} onChange={() => {props.setPerformed(props.id)}}/>\r\n            </Tooltip>\r\n            <Tooltip title={props.isTagged ? 'Tagged' : 'Not tagged'} placement=\"top\" className={classes.star}>\r\n                <IconButton onClick={() => {props.setTag(props.id)}}>\r\n                    {props.isTagged\r\n                        ? <StarIcon color=\"primary\"/>\r\n                        : <StarBorderIcon/>\r\n                    }\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Box className={classes.text} textOverflow=\"ellipsis\" overflow=\"hidden\">\r\n                {props.text}\r\n            </Box>\r\n            {props.activeRowIndex === props.id ?\r\n                <>\r\n                    <Tooltip title=\"Edit\" placement=\"top\">\r\n                        <IconButton onClick={() => {props.setEditModeIndex(props.id)}}>\r\n                            <EditIcon/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    <Divider orientation=\"vertical\" flexItem/>\r\n                    <ViewContent text={props.text} setActiveRowIndex={props.setActiveRowIndex}/>\r\n                    <Divider orientation=\"vertical\" flexItem/>\r\n                    <Tooltip title=\"Delete\" placement=\"top\">\r\n                        <IconButton onClick={() => {props.deleteTasks(props.id)}}>\r\n                            <DeleteIcon/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </>\r\n                :\r\n                <Box className={classes.date}>{props.date}</Box>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Row;","import React, {FC} from 'react';\r\nimport {IDeleteTasks, IRowContainerProps, ISetPerformed, ISetTag} from \"./RowTypes\";\r\nimport Row from \"./Row\";\r\nimport {deleteTaskActionCreator, setPerformedActionCreator, setTagActionCreator} from \"../../../../store/actions\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nconst RowContainer: FC<IRowContainerProps> = props => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const setPerformed: ISetPerformed = id => {\r\n        dispatch(setPerformedActionCreator(id))\r\n    };\r\n\r\n    const deleteTasks: IDeleteTasks = id => {\r\n        dispatch(deleteTaskActionCreator(id));\r\n        props.setOpenMessage({open: true, message: 'Uninstall was successful'});\r\n    };\r\n\r\n    const setTag: ISetTag = id => {\r\n        dispatch(setTagActionCreator(id));\r\n    };\r\n\r\n    return (\r\n        <Row\r\n            setPerformed={setPerformed}\r\n            deleteTasks={deleteTasks}\r\n            setTag={setTag}\r\n            {...props}\r\n        />\r\n    );\r\n};\r\n\r\nexport default RowContainer;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        borderTop: '1px solid #e0e0e0',\r\n        flexGrow: 1\r\n    },\r\n    empty: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        '& span': {\r\n            padding: '16px',\r\n            backgroundColor: '#fafafa',\r\n            borderRadius: '5px',\r\n            border: '1px solid #e0e0e0'\r\n        }\r\n    },\r\n});\r\n\r\nexport default useStyles;","import React, {FC} from 'react';\r\nimport {Box} from \"@material-ui/core\";\r\nimport {IListProps} from \"./ListTypes\";\r\nimport RowEditContainer from \"./RowEdit/RowEditContainer\";\r\nimport RowContainer from \"./Row/RowContainer\";\r\nimport useStyles from \"./ListStyles\";\r\n\r\nconst List: FC<IListProps> = props => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Box className={classes.root}>\r\n            {props.tasks.length === 0 && <Box className={classes.empty}><span>It's empty here...</span></Box>}\r\n            {props.tasks.slice(props.leftPortionPageNumber, props.rightPortionPageNumber).map(item =>\r\n                props.editModeIndex !== item.id ?\r\n                    <RowContainer\r\n                        id={item.id}\r\n                        text={item.text}\r\n                        isPerformed={item.isPerformed}\r\n                        editModeIndex={props.editModeIndex}\r\n                        setEditModeIndex={props.setEditModeIndex}\r\n                        activeRowIndex={props.activeRowIndex}\r\n                        setActiveRowIndex={props.setActiveRowIndex}\r\n                        setOpenMessage={props.setOpenMessage}\r\n                        isTagged={item.isTagged}\r\n                        date={props.convertDate(item.date)}\r\n                        key={item.id}\r\n                    />\r\n                    :\r\n                    <RowEditContainer\r\n                        id={item.id}\r\n                        text={item.text}\r\n                        setEditModeIndex={props.setEditModeIndex}\r\n                        setOpenMessage={props.setOpenMessage}\r\n                        key={item.id}\r\n                        setActiveRowIndex={props.setActiveRowIndex}\r\n                    />\r\n            )}\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default List;","import React, {FC, useState} from 'react';\r\nimport List from \"./List\";\r\nimport {IConvertDate, IListContainerProps} from \"./ListTypes\";\r\n\r\nconst convertDate: IConvertDate = date => {\r\n    const months = [\"Jan.\",\"Feb.\",\"Mar.\",\"Apr.\",\"May\",\"June\",\"July\",\"Aug.\",\"Sept.\",\"Oct.\",\"Nov.\",\"Dec.\"];\r\n    return `${ new Date(date).getDate()} ${ months[new Date(date).getMonth()]}`\r\n};\r\n\r\nconst ListContainer: FC<IListContainerProps> = props => {\r\n\r\n    const [editModeIndex, setEditModeIndex] = useState<number | null>(null);\r\n\r\n    const [activeRowIndex, setActiveRowIndex] = useState<number | null>(null);\r\n\r\n    const leftPortionPageNumber: number = (props.pageNumber - 1) * props.pageSize;\r\n    const rightPortionPageNumber: number = props.pageNumber * props.pageSize;\r\n\r\n    let filterTasks = [];\r\n    switch (props.filter) {\r\n        case 'not performed': filterTasks = props.tasks.filter(item => !item.isPerformed); break;\r\n        case 'tags': filterTasks = props.tasks.filter(item => item.isTagged); break;\r\n        default: filterTasks = props.tasks\r\n    }\r\n\r\n    return (\r\n        <List\r\n            tasks={filterTasks}\r\n            editModeIndex={editModeIndex}\r\n            setEditModeIndex={setEditModeIndex}\r\n            activeRowIndex={activeRowIndex}\r\n            setActiveRowIndex={setActiveRowIndex}\r\n            setOpenMessage={props.setOpenMessage}\r\n            pageNumber={props.pageNumber}\r\n            pageSize={props.pageSize}\r\n            leftPortionPageNumber={leftPortionPageNumber}\r\n            rightPortionPageNumber={rightPortionPageNumber}\r\n            filter={props.filter}\r\n            convertDate={convertDate}\r\n        />\r\n    );\r\n};\r\n\r\nexport default ListContainer;","import React, {FC} from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport {IMessageProps} from \"./MessageTypes\";\r\nimport {Slide, SlideProps} from \"@material-ui/core\";\r\n\r\ntype TransitionProps = Omit<SlideProps, 'direction'>;\r\n\r\nfunction TransitionRight(props: TransitionProps) {\r\n    return <Slide {...props} direction=\"right\" />;\r\n}\r\n\r\nconst Message: FC<IMessageProps> = props => {\r\n    return (\r\n        <Snackbar\r\n            open={props.openMessage.open}\r\n            onClose={() => {props.setOpenMessage({open: false, message: null})}}\r\n            autoHideDuration={3000}\r\n            anchorOrigin={{vertical: 'bottom', horizontal: 'left'}}\r\n            TransitionComponent={TransitionRight}\r\n        >\r\n            <Alert\r\n                onClose={() => {props.setOpenMessage({open: false, message: null})}}\r\n                severity=\"success\"\r\n                variant=\"filled\"\r\n            >\r\n                {props.openMessage.message}\r\n            </Alert>\r\n        </Snackbar>\r\n    );\r\n};\r\n\r\nexport default Message;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        padding: '8px',\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    }\r\n});\r\n\r\nexport default useStyles;","import React, {FC} from 'react';\r\nimport {Pagination} from \"@material-ui/lab\";\r\nimport {IPaginatorProps} from \"./PaginatorTypes\";\r\nimport {Box} from \"@material-ui/core\";\r\nimport useStyles from \"./PaginatorStyles\";\r\n\r\nconst Paginator: FC<IPaginatorProps> = props => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const pagesCount: number = Math.ceil(props.tasks.length / props.pageSize);\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Pagination count={pagesCount} onChange={props.paginatorChange} color=\"primary\"/>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Paginator;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '700px',\r\n        height: '80vh',\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    }\r\n});\r\n\r\nexport default useStyles;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '230px',\r\n        margin: '0 8px 8px'\r\n    }\r\n});\r\n\r\nexport default useStyles;","import React, {FC} from 'react';\r\nimport {Box} from \"@material-ui/core\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {IControlProps} from \"./ControlTypes\";\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport useStyles from \"./ControlStyles\";\r\n\r\nconst Control: FC<IControlProps> = props => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Button onClick={props.handleButtonClick} startIcon={<FilterListIcon/>}>\r\n                <Typography variant=\"body2\">\r\n                    Filter by: {props.filter}\r\n                </Typography>\r\n            </Button>\r\n            <Menu\r\n                anchorEl={props.anchorEl}\r\n                keepMounted\r\n                open={Boolean(props.anchorEl)}\r\n                onClose={props.handleClose}\r\n            >\r\n                {props.options.map((option, index) =>\r\n                    <MenuItem\r\n                        key={option}\r\n                        selected={index === props.selectedIndex}\r\n                        onClick={(event) => props.handleMenuItemClick(event, index)}\r\n                    >\r\n                        {option}\r\n                    </MenuItem>\r\n                )}\r\n            </Menu>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Control;","import React, {FC} from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setFilterActionCreator} from \"../../../store/actions\";\r\nimport {IControlContainerProps, IHandleButtonClick, IHandleClose, IHandleMenuItemClick} from \"./ControlTypes\";\r\nimport Control from \"./Control\";\r\n\r\nconst options: Array<string> = [\r\n    'all',\r\n    'not performed',\r\n    'tags',\r\n];\r\n\r\nconst ControlContainer: FC<IControlContainerProps> = props => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n\r\n    const [selectedIndex, setSelectedIndex] = React.useState<number>(0);\r\n\r\n    const handleButtonClick: IHandleButtonClick = event => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleMenuItemClick: IHandleMenuItemClick = (event, index) => {\r\n        setSelectedIndex(index);\r\n        setAnchorEl(null);\r\n        dispatch(setFilterActionCreator(options[index]));\r\n    };\r\n\r\n    const handleClose: IHandleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <Control\r\n            filter={props.filter}\r\n            anchorEl={anchorEl}\r\n            selectedIndex={selectedIndex}\r\n            handleButtonClick={handleButtonClick}\r\n            handleMenuItemClick={handleMenuItemClick}\r\n            handleClose={handleClose}\r\n            options={options}\r\n        />\r\n    )\r\n};\r\n\r\nexport default ControlContainer;","import React, {FC} from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport AddContainer from \"./Add/AddContainer\";\r\nimport ListContainer from \"./List/ListContainer\";\r\nimport Message from \"./Message/Message\";\r\nimport {IMainProps} from \"./MainTypes\";\r\nimport Paginator from \"./Paginator/Paginator\";\r\nimport useStyles from \"./MainStyles\";\r\nimport ControlContainer from \"./Control/ControlContainer\";\r\n\r\nconst Main: FC<IMainProps> = props => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Paper className={classes.root} elevation={3}>\r\n            <AddContainer tasks={props.state.tasks}/>\r\n            <ControlContainer filter={props.state.filter}/>\r\n            <ListContainer\r\n                setOpenMessage={props.setOpenMessage}\r\n                tasks={props.state.tasks}\r\n                pageNumber={props.pageNumber}\r\n                pageSize={props.pageSize}\r\n                filter={props.state.filter}\r\n            />\r\n            <Message\r\n                openMessage={props.openMessage}\r\n                setOpenMessage={props.setOpenMessage}\r\n            />\r\n            <Paginator\r\n                tasks={props.state.tasks}\r\n                paginatorChange={props.paginatorChange}\r\n                pageSize={props.pageSize}\r\n            />\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default Main;","import React, {useEffect, useState} from 'react';\r\nimport {IMessage, IPaginatorChange} from \"./MainTypes\";\r\nimport {shallowEqual, useDispatch, useSelector} from \"react-redux\";\r\nimport {RootStateType} from \"../../store/store\";\r\nimport Main from \"./Main\";\r\nimport {getFromLocalStorage, setToLocalStorage} from \"../../api/localStorageAPI\";\r\nimport {setStateActionCreator} from \"../../store/actions\";\r\nimport {IState} from \"../../store/types\";\r\n\r\nconst MainContainer = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const state: IState = useSelector((state: RootStateType) => state.toDo, shallowEqual);\r\n\r\n    useEffect(() => {\r\n        const stateLocalStorage: IState = getFromLocalStorage();\r\n        if (stateLocalStorage !== null) dispatch(setStateActionCreator(stateLocalStorage));\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        setToLocalStorage(state);\r\n    }, [state]);\r\n\r\n    const [openMessage, setOpenMessage] = useState<IMessage>({open: false, message: null});\r\n\r\n    const pageSize: number = 11;\r\n    const [pageNumber, setPageNumber] = useState<number>(1);\r\n    const paginatorChange: IPaginatorChange = (event, value) => {\r\n        setPageNumber(value);\r\n    };\r\n\r\n    return (\r\n        <Main\r\n            openMessage={openMessage}\r\n            setOpenMessage={setOpenMessage}\r\n            pageSize={pageSize}\r\n            pageNumber={pageNumber}\r\n            paginatorChange={paginatorChange}\r\n            state={state}\r\n        />\r\n    );\r\n};\r\n\r\nexport default MainContainer;","import {IState} from \"../store/types\";\r\n\r\nexport const setToLocalStorage = (state: IState) => {\r\n        localStorage.setItem('tasks', JSON.stringify(state));\r\n};\r\n\r\nexport const getFromLocalStorage = (): IState => {\r\n    return JSON.parse(localStorage.getItem('tasks') as string);\r\n};\r\n","import React from 'react';\nimport './App.css';\nimport MainContainer from \"./components/Main/MainContainer\";\n\nconst App = () => {\n    return (\n        <div className=\"App\">\n            <MainContainer/>\n        </div>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {createMuiTheme, Theme} from \"@material-ui/core\";\r\nimport {indigo} from \"@material-ui/core/colors\";\r\n\r\nconst theme: Theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: indigo[400]\r\n        },\r\n        success: {\r\n            main: indigo[400]\r\n        }\r\n    }\r\n});\r\n\r\nexport default theme","import {ADD_TASK, DELETE_TASK, SAVE_TASK, SET_FILTER, SET_PERFORMED, SET_STATE, SET_TAG} from \"./constants\";\r\nimport {IState} from './types'\r\nimport {ActionType} from \"./actions\";\r\n\r\nconst initialState: IState = {\r\n    tasks: [],\r\n    filter: 'all'\r\n};\r\n\r\nexport const reducer = (state = initialState, action: ActionType): IState => {\r\n    switch (action.type) {\r\n        case ADD_TASK: {\r\n            return {\r\n                ...state,\r\n                tasks: [...state.tasks, {id: action.id, text: action.text, isPerformed: false, isTagged: false, date: action.date}]\r\n            }\r\n        }\r\n        case DELETE_TASK: {\r\n            return {\r\n                ...state,\r\n                tasks: state.tasks.filter(i => i.id !== action.id)\r\n            }\r\n        }\r\n        case SET_PERFORMED: {\r\n            return {\r\n                ...state,\r\n                tasks: state.tasks.map(i => {\r\n                    if (i.id === action.id) {\r\n                        return {...i, isPerformed: !i.isPerformed}\r\n                    } else {\r\n                        return {...i}\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        case SAVE_TASK: {\r\n            return {\r\n                ...state,\r\n                tasks: state.tasks.map(i =>\r\n                    i.id === action.id\r\n                        ? {...i, text: action.text}\r\n                        : {...i}\r\n                )\r\n            }\r\n        }\r\n        case SET_STATE: {\r\n            return action.state\r\n        }\r\n        case SET_TAG: {\r\n            return {\r\n                ...state, tasks: state.tasks.map(i =>\r\n                    i.id === action.id\r\n                        ? {...i, isTagged: !i.isTagged}\r\n                        : {...i}\r\n                )\r\n            }\r\n        }\r\n        case SET_FILTER: {\r\n            return {\r\n                ...state, filter: action.option\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n};","import {createStore, combineReducers} from 'redux';\r\nimport {reducer} from \"./reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    toDo: reducer\r\n});\r\n\r\nexport type RootStateType = ReturnType<typeof rootReducer> //ReturnType cоздаёт тип, состоящий из возвращаемого типа функции RootReducer\r\n\r\nexport const store = createStore(rootReducer);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {ThemeProvider} from '@material-ui/core/styles';\nimport theme from \"./theme\";\nimport {Provider as StoreProvider} from \"react-redux\";\nimport {store} from \"./store/store\";\n\nReactDOM.render(\n    <StoreProvider store={store}>\n        <ThemeProvider theme={theme}>\n            <App/>\n        </ThemeProvider>\n    </StoreProvider>,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ViewContent\":\"ViewContent_ViewContent__3_YZb\"};"],"sourceRoot":""}