{"version":3,"sources":["components/Main/Add/AddStyles.ts","components/Main/Add/Add.tsx","components/Main/Add/AddContainer.tsx","store/list/actions.ts","store/list/constants.ts","components/Main/List/RowEdit/RowEditStyles.ts","components/Main/List/RowEdit/RowEdit.tsx","components/Main/List/RowEdit/RowEditContainer.tsx","components/Main/List/Row/ViewContent/ViewContent.tsx","components/Main/List/Row/RowStyles.ts","components/Main/List/Row/Row.tsx","components/Main/List/Row/RowContainer.tsx","components/Main/List/ListStyles.ts","components/Main/List/List.tsx","components/Main/List/ListContainer.tsx","components/Main/Message/Message.tsx","components/Main/Paginator/PaginatorStyles.ts","components/Main/Paginator/Paginator.tsx","components/Main/MainStyles.ts","components/Main/Preloader/PreloaderStyles.ts","components/Main/Preloader/Preloader.tsx","components/Main/Tools/Filter/FilterStyles.ts","components/Main/Tools/Filter/Filter.tsx","components/Main/Tools/Filter/FilterContainer.tsx","components/Main/Tools/Sort/SortStyles.ts","components/Main/Tools/Sort/Sort.tsx","components/Main/Tools/Sort/SortContainer.tsx","components/Main/Tools/ToolsStyles.ts","components/Main/Tools/Tools.tsx","components/Main/Main.tsx","api/apiLocalStorage.ts","components/Main/MainContainer.tsx","store/list/thunks.ts","store/app/actions.ts","store/app/constants.ts","App.tsx","serviceWorker.ts","theme.ts","store/list/reducer.ts","store/app/reducer.ts","store/store.ts","index.tsx","components/Main/List/Row/ViewContent/ViewContent.module.css"],"names":["useStyles","makeStyles","root","display","alignItems","padding","borderRadius","btn","height","Add","textFieldValue","textFieldChange","addTask","classes","Box","className","TextField","label","fullWidth","size","value","onChange","event","target","variant","onKeyUp","keyCode","ml","Button","onClick","color","AddContainer","tasks","dispatch","useDispatch","useState","setTextFieldValue","text","matches","newId","newDate","Date","toISOString","Math","floor","random","length","i","id","date","type","addTaskActionCreator","boxSizing","borderBottom","boxShadow","RowEdit","props","flexGrow","pl","InputBase","placeholder","autoFocus","inputValue","e","setInputValue","saveTask","Tooltip","title","placement","IconButton","Divider","orientation","flexItem","setEditModeIndex","RowEditContainer","saveTaskActionCreator","setActiveRow","setOpenMessage","open","message","PaperComponent","handle","Paper","ViewContent","fullScreen","useMediaQuery","theme","breakpoints","down","React","setOpen","handleClose","Transition","forwardRef","ref","Slide","direction","Dialog","onClose","TransitionComponent","DialogTitle","style","cursor","DialogContent","DialogContentText","styles","DialogActions","star","position","right","whiteSpace","textDecoration","stylesProps","minWidth","margin","Row","isMobile","maxWidth","isPerformed","onTouchStart","onMouseMove","onMouseLeave","Checkbox","checked","setPerformed","isTagged","setTag","textOverflow","overflow","activeRowIndex","deleteTasks","RowContainer","setPerformedActionCreator","deleteTaskActionCreator","setTagActionCreator","borderTop","empty","justifyContent","backgroundColor","border","List","initialized","slice","leftPortionPageNumber","rightPortionPageNumber","map","item","editModeIndex","convertDate","key","getDate","getMonth","ListContainer","setActiveRowIndex","pageNumber","pageSize","filterTasks","filter","sortBy","sort","a","b","TransitionRight","Message","Hidden","mdDown","Snackbar","openMessage","autoHideDuration","anchorOrigin","vertical","horizontal","Alert","severity","Paginator","pagesCount","ceil","Pagination","count","paginatorChange","width","up","createStyles","backdrop","zIndex","drawer","Preloader","Backdrop","CircularProgress","Filter","handleButtonClick","startIcon","Typography","Menu","anchorEl","keepMounted","Boolean","options","option","index","MenuItem","selected","indexOf","handleMenuItemClick","FilterContainer","setAnchorEl","currentTarget","Sort","SortContainer","Tools","Main","elevation","listState","apiLocalStorage","state","localStorage","setItem","JSON","stringify","parse","getItem","MainContainer","useSelector","list","app","useEffect","stateLocalStorage","setTimeout","setPageNumber","App","window","location","hostname","match","createMuiTheme","palette","primary","main","indigo","success","initialState","middlewares","thunk","rootReducer","combineReducers","action","store","createStore","applyMiddleware","ReactDOM","render","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","module","exports"],"mappings":"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","file":"static/js/main.b86d5f2e.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        alignItems: 'stretch',\r\n        padding: '16px',\r\n        borderRadius: '4px 4px 0 0'\r\n    },\r\n    btn: {\r\n        height: '100%'\r\n    }\r\n});\r\n\r\nexport default useStyles;","import React, {FC} from 'react';\r\nimport {TextField, Button, Box} from \"@material-ui/core\";\r\nimport {IAddProps} from \"./AddTypes\";\r\nimport useStyles from \"./AddStyles\";\r\n\r\nexport const Add: FC<IAddProps> = ({textFieldValue, textFieldChange, addTask}) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Box className={classes.root}>\r\n            <TextField\r\n                label='Add task text'\r\n                fullWidth\r\n                size='small'\r\n                value={textFieldValue}\r\n                onChange={(event) => {textFieldChange(event.target.value)}}\r\n                variant=\"outlined\"\r\n                onKeyUp={event => {event.keyCode === 13 && addTask(textFieldValue)}}\r\n            />\r\n            <Box ml={2}>\r\n                <Button\r\n                    className={classes.btn}\r\n                    onClick={() => {addTask(textFieldValue)}}\r\n                    variant=\"contained\"\r\n                    color=\"primary\">ADD\r\n                </Button>\r\n            </Box>\r\n        </Box>\r\n    );\r\n};","import React, {FC, useState} from 'react';\r\nimport {Add} from \"./Add\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {IAddContainerProps, IAddTasks, ITextFieldChange} from \"./AddTypes\";\r\nimport {addTaskActionCreator} from \"../../../store/list/actions\";\r\n\r\nexport const AddContainer: FC<IAddContainerProps> = ({tasks}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [textFieldValue, setTextFieldValue] = useState<string>('');\r\n\r\n    const textFieldChange: ITextFieldChange = value => {\r\n        setTextFieldValue(value)\r\n    };\r\n\r\n    const addTask: IAddTasks = text => {\r\n        if (text !== '') {\r\n            const newDate: string = new Date().toISOString();\r\n            let matches: number;\r\n            let newId: number;\r\n            do {\r\n                matches = 0;\r\n                newId = Math.floor(Math.random() * Math.floor(tasks.length + 1));\r\n                for (let i: number = 0; i < tasks.length; i++) {\r\n                    if (tasks[i].id === newId) matches++\r\n                }\r\n            } while (matches !== 0);\r\n            dispatch(addTaskActionCreator(newId, text, newDate));\r\n            textFieldChange('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Add\r\n            textFieldValue={textFieldValue}\r\n            textFieldChange={textFieldChange}\r\n            addTask={addTask}\r\n        />\r\n    )\r\n};","import {\r\n    ADD_TASK,\r\n    DELETE_TASK,\r\n    SAVE_TASK,\r\n    SET_FILTER,\r\n    SET_PERFORMED,\r\n    SET_SORT,\r\n    SET_STATE,\r\n    SET_TAG\r\n} from \"./constants\";\r\nimport {\r\n    IAddTaskAction,\r\n    IDeleteTaskAction,\r\n    IListState,\r\n    ISaveTaskAction,\r\n    ISetFilterAction,\r\n    ISetPerformedAction,\r\n    ISetStateAction,\r\n    ISetTagAction\r\n} from \"./types\";\r\n\r\nexport const addTaskActionCreator = (id: number, text: string, date: string): IAddTaskAction =>\r\n    ({type: ADD_TASK, id, text, date});\r\n\r\nexport const deleteTaskActionCreator = (id: number): IDeleteTaskAction => ({type: DELETE_TASK, id});\r\n\r\nexport const setPerformedActionCreator = (id: number): ISetPerformedAction => ({type: SET_PERFORMED, id});\r\n\r\nexport const saveTaskActionCreator = (id: number, text: string): ISaveTaskAction => ({type: SAVE_TASK, id, text});\r\n\r\nexport const setStateActionCreator = (state: IListState): ISetStateAction => ({type: SET_STATE, state});\r\n\r\nexport const setTagActionCreator = (id: number): ISetTagAction => ({type: SET_TAG, id});\r\n\r\nexport const setFilterActionCreator = (option: string): ISetFilterAction => ({type: SET_FILTER, option});\r\n\r\nexport const setSortActionCreator = (option: string) => ({type: SET_SORT, option})\r\n\r\n\r\n","export const ADD_TASK = 'ADD_TASK';\r\nexport const DELETE_TASK = 'DELETE_TASK';\r\nexport const SET_PERFORMED = 'SET_PERFORMED';\r\nexport const SAVE_TASK = 'SAVE_TASK';\r\nexport const SET_STATE = 'SET_STATE';\r\nexport const SET_TAG = 'SET_TAG';\r\nexport const SET_FILTER = 'SET_FILTER';\r\nexport const SET_SORT = 'SET_SORT';\r\n\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        height: '50px',\r\n        padding: `8px 0`,\r\n        boxSizing: 'border-box',\r\n        borderBottom: '1px solid transparent',\r\n        boxShadow: '0 2px 5px #757575'\r\n    }\r\n});\r\n\r\nexport default useStyles;","import React, {FC} from 'react';\r\nimport {Box, IconButton, Divider, Tooltip, InputBase} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {IRowEditProps} from \"./RowEditTypes\";\r\nimport useStyles from \"./RowEditStyles\";\r\n\r\nexport const RowEdit: FC<IRowEditProps> = props => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Box flexGrow={1} pl={2}>\r\n                <InputBase\r\n                    placeholder='Change the task text'\r\n                    autoFocus\r\n                    value={props.inputValue}\r\n                    onChange={e => {props.setInputValue(e.target.value)}}\r\n                    onKeyUp={event => {event.keyCode === 13 && props.saveTask(props.id, props.inputValue)}}\r\n                    fullWidth\r\n                />\r\n            </Box>\r\n            <Tooltip title=\"Save\" placement=\"top\">\r\n                <IconButton onClick={() => {props.saveTask(props.id, props.inputValue)}}>\r\n                    <SaveIcon />\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Divider orientation=\"vertical\" flexItem/>\r\n            <Tooltip title=\"Cancel\" placement=\"top\">\r\n                <IconButton onClick={() => {props.setEditModeIndex(null)}}>\r\n                    <CancelIcon />\r\n                </IconButton>\r\n            </Tooltip>\r\n        </Box>\r\n    );\r\n};","import React, {FC, useState} from 'react';\r\nimport {IRowEditContainerProps, ISaveTask} from \"./RowEditTypes\";\r\nimport {RowEdit} from \"./RowEdit\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {saveTaskActionCreator} from \"../../../../store/list/actions\";\r\n\r\nexport const RowEditContainer: FC<IRowEditContainerProps> = props => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [inputValue, setInputValue] = useState<string>(props.text);\r\n\r\n    const saveTask: ISaveTask = (id, text) => {\r\n        dispatch(saveTaskActionCreator(id, text));\r\n        props.setEditModeIndex(null);\r\n        props.setActiveRow(null);\r\n        props.setOpenMessage({open: true, message: 'Saving was successful!'});\r\n    };\r\n\r\n    return (\r\n        <RowEdit\r\n            inputValue={inputValue}\r\n            setInputValue={setInputValue}\r\n            saveTask={saveTask}\r\n            {...props}\r\n        />\r\n    );\r\n};","import React, {FC} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Paper, { PaperProps } from '@material-ui/core/Paper';\r\nimport Draggable from 'react-draggable';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport {Theme, Tooltip} from \"@material-ui/core\";\r\nimport {IViewContentProps} from \"./ViewContentTypes\";\r\nimport styles from './ViewContent.module.css'\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport {TransitionProps} from \"@material-ui/core/transitions\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n\r\nfunction PaperComponent(props: PaperProps) {\r\n\r\n    return (\r\n        <Draggable handle=\"#draggable-dialog-title\">\r\n            <Paper {...props} />\r\n        </Draggable>\r\n    );\r\n}\r\n\r\nconst ViewContent: FC<IViewContentProps> = props => {\r\n\r\n    const fullScreen: boolean = useMediaQuery((theme: Theme) => theme.breakpoints.down('sm')); // > 600px\r\n\r\n    const [open, setOpen] = React.useState<boolean>(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        props.setActiveRow(null);\r\n    };\r\n\r\n    const Transition = React.forwardRef(function Transition(\r\n        props: TransitionProps & { children?: React.ReactElement<any, any> },\r\n        ref: React.Ref<unknown>,\r\n    ) {\r\n        return <Slide direction=\"up\" ref={ref} {...props} />;\r\n    });\r\n\r\n    return (\r\n        <div >\r\n            <Tooltip title='View content' placement=\"top\">\r\n                <IconButton onClick={handleClickOpen}>\r\n                    <VisibilityIcon />\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                PaperComponent={PaperComponent}\r\n                TransitionComponent={Transition}\r\n                fullScreen={fullScreen}\r\n            >\r\n                <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n                    View content\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText className={styles.ViewContent}>\r\n                        {props.text}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={handleClose} color=\"primary\">\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ViewContent;","import { makeStyles } from '@material-ui/core/styles';\r\nimport {IStylesProps} from \"./RowTypes\";\r\n\r\nconst spacing = '8px';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        height: '50px',\r\n        padding: `${spacing} 0`,\r\n        boxSizing: 'border-box',\r\n        borderBottom: '1px solid #eeeeee',\r\n        '&:hover': {\r\n            borderBottom: '1px solid transparent',\r\n            boxShadow: '0 2px 5px #757575'\r\n        }\r\n    },\r\n    star: {\r\n        position: 'relative',\r\n        right: '12px',\r\n    },\r\n    text: {\r\n        position: 'relative',\r\n        right: '12px',\r\n        whiteSpace: 'nowrap',\r\n        flexGrow: 1,\r\n        textDecoration: (stylesProps: IStylesProps): string => stylesProps.textDecoration\r\n    },\r\n    date: {\r\n        minWidth: '50px',\r\n        margin: `0 ${spacing}`\r\n    }\r\n});\r\n\r\nexport default useStyles;","import React, {FC} from 'react';\r\nimport {Box, Checkbox, IconButton, Divider, Tooltip} from \"@material-ui/core\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport {IRowProps} from \"./RowTypes\";\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport ViewContent from \"./ViewContent/ViewContent\";\r\nimport useStyles from \"./RowStyles\";\r\n// import useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { useMediaQuery } from 'react-responsive'\r\n\r\nexport const Row: FC<IRowProps> = props => {\r\n\r\n    // const isMobile: boolean = useMediaQuery((theme: Theme) => theme.breakpoints.down('sm')); // > 600px\r\n    const isMobile = useMediaQuery({ maxWidth: 600 })\r\n\r\n    const stylesProps = {\r\n        textDecoration: props.isPerformed ? 'line-through' : 'none',\r\n    };\r\n    const classes = useStyles(stylesProps);\r\n\r\n    return (\r\n        <div\r\n            className={classes.root}\r\n            onTouchStart={() => {isMobile && props.setActiveRow(props.id)}}\r\n            onMouseMove={() => {!isMobile && props.setActiveRow(props.id)}}\r\n            onMouseLeave={() => {!isMobile && props.setActiveRow(null)}}\r\n            id='draggable-row'\r\n        >\r\n            <Tooltip title={props.isPerformed ? 'Performed' : 'Not performed'} placement=\"top\">\r\n                <Checkbox color='primary' checked={props.isPerformed} onChange={() => {props.setPerformed(props.id)}}/>\r\n            </Tooltip>\r\n            <Tooltip title={props.isTagged ? 'Tagged' : 'Not tagged'} placement=\"top\" className={classes.star}>\r\n                <IconButton onClick={() => {props.setTag(props.id)}}>\r\n                    {props.isTagged\r\n                        ? <StarIcon color=\"primary\"/>\r\n                        : <StarBorderIcon/>\r\n                    }\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Box className={classes.text} textOverflow=\"ellipsis\" overflow=\"hidden\">\r\n                {props.text}\r\n            </Box>\r\n            {props.activeRowIndex === props.id ?\r\n                <>\r\n                    <Tooltip title=\"Edit\" placement=\"top\">\r\n                        <IconButton onClick={() => {props.setEditModeIndex(props.id)}}>\r\n                            <EditIcon/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    <Divider orientation=\"vertical\" flexItem/>\r\n                    <ViewContent text={props.text} setActiveRow={props.setActiveRow}/>\r\n                    <Divider orientation=\"vertical\" flexItem/>\r\n                    <Tooltip title=\"Delete\" placement=\"top\">\r\n                        <IconButton onClick={() => {props.deleteTasks(props.id)}}>\r\n                            <DeleteIcon/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </>\r\n                :\r\n                <Box className={classes.date}>{props.date}</Box>\r\n            }\r\n        </div>\r\n    );\r\n};","import React, {FC} from 'react';\r\nimport {IDeleteTasks, IRowContainerProps, ISetPerformed, ISetTag} from \"./RowTypes\";\r\nimport {Row} from \"./Row\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {\r\n    deleteTaskActionCreator,\r\n    setPerformedActionCreator,\r\n    setTagActionCreator\r\n} from \"../../../../store/list/actions\";\r\n\r\nexport const RowContainer: FC<IRowContainerProps> = props => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const setPerformed: ISetPerformed = id => {\r\n        dispatch(setPerformedActionCreator(id))\r\n    };\r\n\r\n    const deleteTasks: IDeleteTasks = id => {\r\n        dispatch(deleteTaskActionCreator(id));\r\n        props.setOpenMessage({open: true, message: 'Uninstall was successful'});\r\n    };\r\n\r\n    const setTag: ISetTag = id => {\r\n        dispatch(setTagActionCreator(id));\r\n    };\r\n\r\n    return (\r\n        <Row\r\n            setPerformed={setPerformed}\r\n            deleteTasks={deleteTasks}\r\n            setTag={setTag}\r\n            {...props}\r\n        />\r\n    );\r\n};","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        borderTop: '1px solid #e0e0e0',\r\n        flexGrow: 1,\r\n        overflow: 'auto'\r\n    },\r\n    empty: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        '& span': {\r\n            padding: '16px',\r\n            backgroundColor: '#fafafa',\r\n            borderRadius: '5px',\r\n            border: '1px solid #e0e0e0'\r\n        }\r\n    },\r\n});\r\n\r\nexport default useStyles;","import React, {FC} from 'react';\r\nimport {Box} from \"@material-ui/core\";\r\nimport {IListProps} from \"./ListTypes\";\r\nimport {RowEditContainer} from \"./RowEdit/RowEditContainer\";\r\nimport {RowContainer} from \"./Row/RowContainer\";\r\nimport useStyles from \"./ListStyles\";\r\n\r\nexport const List: FC<IListProps> = props => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Box className={classes.root}>\r\n            {\r\n                props.initialized &&\r\n                    props.tasks.length === 0 &&\r\n                        <Box className={classes.empty}><span>It's empty here...</span></Box>\r\n            }\r\n            {props.tasks.slice(props.leftPortionPageNumber, props.rightPortionPageNumber).map(item =>\r\n                props.editModeIndex !== item.id ?\r\n                    <RowContainer\r\n                        id={item.id}\r\n                        text={item.text}\r\n                        isPerformed={item.isPerformed}\r\n                        editModeIndex={props.editModeIndex}\r\n                        setEditModeIndex={props.setEditModeIndex}\r\n                        activeRowIndex={props.activeRowIndex}\r\n                        setActiveRow={props.setActiveRow}\r\n                        setOpenMessage={props.setOpenMessage}\r\n                        isTagged={item.isTagged}\r\n                        date={props.convertDate(item.date)}\r\n                        key={item.id}\r\n                    />\r\n                    :\r\n                    <RowEditContainer\r\n                        id={item.id}\r\n                        text={item.text}\r\n                        setEditModeIndex={props.setEditModeIndex}\r\n                        setOpenMessage={props.setOpenMessage}\r\n                        key={item.id}\r\n                        setActiveRow={props.setActiveRow}\r\n                    />\r\n            )}\r\n        </Box>\r\n    );\r\n};","import React, {FC, useState} from 'react';\r\nimport {List} from \"./List\";\r\nimport {IConvertDate, IListContainerProps, ISetActiveRow} from \"./ListTypes\";\r\n\r\nconst convertDate: IConvertDate = date => {\r\n    const months = [\"Jan.\",\"Feb.\",\"Mar.\",\"Apr.\",\"May\",\"June\",\"July\",\"Aug.\",\"Sept.\",\"Oct.\",\"Nov.\",\"Dec.\"];\r\n    return `${ new Date(date).getDate()} ${ months[new Date(date).getMonth()]}`\r\n};\r\n\r\nexport const ListContainer: FC<IListContainerProps> = props => {\r\n\r\n    const [editModeIndex, setEditModeIndex] = useState<number | null>(null);\r\n\r\n    const [activeRowIndex, setActiveRowIndex] = useState<number | null>(null);\r\n\r\n    const setActiveRow: ISetActiveRow = id => {\r\n        setActiveRowIndex(id)\r\n    }\r\n\r\n    const leftPortionPageNumber: number = (props.pageNumber - 1) * props.pageSize;\r\n    const rightPortionPageNumber: number = props.pageNumber * props.pageSize;\r\n\r\n    let filterTasks = [];\r\n    switch (props.filter) {\r\n        case 'not performed': filterTasks = props.tasks.filter(item => !item.isPerformed); break;\r\n        case 'tags': filterTasks = props.tasks.filter(item => item.isTagged); break;\r\n        default: filterTasks = props.tasks\r\n    }\r\n\r\n    switch (props.sortBy) {\r\n        case 'not performed': filterTasks.sort(\r\n            (a, b) => {\r\n                if (a.isPerformed > b.isPerformed) return 1\r\n                if (a.isPerformed < b.isPerformed) return -1\r\n                return 0\r\n            }\r\n        ); break;\r\n        case 'tags': filterTasks.sort(\r\n            (a, b) => {\r\n                if (a.isTagged < b.isTagged) return 1\r\n                if (a.isTagged > b.isTagged) return -1\r\n                return 0\r\n            }\r\n        ); break;\r\n        case 'date': filterTasks.sort(\r\n            (a, b) => {\r\n                if (a.date > b.date) return 1\r\n                if (a.date < b.date) return -1\r\n                return 0\r\n            }\r\n        )\r\n    }\r\n\r\n    return (\r\n        <List\r\n            tasks={filterTasks}\r\n            editModeIndex={editModeIndex}\r\n            setEditModeIndex={setEditModeIndex}\r\n            activeRowIndex={activeRowIndex}\r\n            setActiveRow={setActiveRow}\r\n            setOpenMessage={props.setOpenMessage}\r\n            pageNumber={props.pageNumber}\r\n            pageSize={props.pageSize}\r\n            leftPortionPageNumber={leftPortionPageNumber}\r\n            rightPortionPageNumber={rightPortionPageNumber}\r\n            filter={props.filter}\r\n            sortBy={props.sortBy}\r\n            convertDate={convertDate}\r\n            initialized={props.initialized}\r\n        />\r\n    );\r\n};\r\n\r\nexport default ListContainer;","import React, {FC} from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport {IMessageProps} from \"./MessageTypes\";\r\nimport {Slide, SlideProps} from \"@material-ui/core\";\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\ntype TransitionProps = Omit<SlideProps, 'direction'>;\r\n\r\nfunction TransitionRight(props: TransitionProps) {\r\n    return <Slide {...props} direction=\"right\" />;\r\n}\r\n\r\nexport const Message: FC<IMessageProps> = props => {\r\n    return (\r\n        <Hidden mdDown>\r\n            <Snackbar\r\n                open={props.openMessage.open}\r\n                onClose={() => {props.setOpenMessage({open: false, message: null})}}\r\n                autoHideDuration={4000}\r\n                anchorOrigin={{vertical: 'bottom', horizontal: 'left'}}\r\n                TransitionComponent={TransitionRight}\r\n            >\r\n                <Alert\r\n                    onClose={() => {props.setOpenMessage({open: false, message: null})}}\r\n                    severity=\"success\"\r\n                    variant=\"filled\"\r\n                >\r\n                    {props.openMessage.message}\r\n                </Alert>\r\n            </Snackbar>\r\n        </Hidden>\r\n    );\r\n};","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        padding: '8px',\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    }\r\n});\r\n\r\nexport default useStyles;","import React, {FC} from 'react';\r\nimport {Pagination} from \"@material-ui/lab\";\r\nimport {IPaginatorProps} from \"./PaginatorTypes\";\r\nimport {Box} from \"@material-ui/core\";\r\nimport useStyles from \"./PaginatorStyles\";\r\n\r\nexport const Paginator: FC<IPaginatorProps> = props => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const pagesCount: number = Math.ceil(props.tasks.length / props.pageSize);\r\n\r\n    return (\r\n        <Box className={classes.root} position=\"static\">\r\n            <Pagination count={pagesCount} onChange={props.paginatorChange} color=\"primary\"/>\r\n        </Box>\r\n    );\r\n};","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: '100vw',\r\n        height: '100vh',\r\n        [theme.breakpoints.up('sm')]: {\r\n            height: '80vh',\r\n            width: '700px',\r\n        },\r\n        minWidth: '250px',\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    }\r\n}));\r\n\r\nexport default useStyles;","import {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        backdrop: {\r\n            zIndex: theme.zIndex.drawer + 1,\r\n            color: '#fff',\r\n        },\r\n    }),\r\n);\r\n\r\nexport default useStyles;","import React, {FC} from 'react';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport useStyles from \"./PreloaderStyles\";\r\nimport {IPreloaderProps} from \"./PreloaderTypes\";\r\n\r\nexport const Preloader: FC<IPreloaderProps> = ({initialized}) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Backdrop className={classes.backdrop} open={!initialized}>\r\n            <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n    );\r\n};\r\n\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        // width: '230px',\r\n        margin: '0 8px 8px'\r\n    }\r\n});\r\n\r\nexport default useStyles;","import React, {FC} from 'react';\r\nimport {Box} from \"@material-ui/core\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {IFilterProps} from \"./FilterTypes\";\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport useStyles from \"./FilterStyles\";\r\n\r\nexport const Filter: FC<IFilterProps> = props => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Button onClick={props.handleButtonClick} startIcon={<FilterListIcon/>}>\r\n                <Typography variant=\"body2\">\r\n                    Filter by: {props.filter}\r\n                </Typography>\r\n            </Button>\r\n            <Menu\r\n                anchorEl={props.anchorEl}\r\n                keepMounted\r\n                open={Boolean(props.anchorEl)}\r\n                onClose={props.handleClose}\r\n            >\r\n                {props.options.map((option, index) =>\r\n                    <MenuItem\r\n                        key={option}\r\n                        selected={index === props.options.indexOf(props.filter)}\r\n                        onClick={(event) => props.handleMenuItemClick(event, index)}\r\n                    >\r\n                        {option}\r\n                    </MenuItem>\r\n                )}\r\n            </Menu>\r\n        </Box>\r\n    );\r\n};","import React, {FC} from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {\r\n    IFilterContainerProps,\r\n    IHandleButtonClick,\r\n    IHandleClose,\r\n    IHandleMenuItemClick\r\n} from \"./FilterTypes\";\r\nimport {Filter} from \"./Filter\";\r\nimport {setFilterActionCreator} from \"../../../../store/list/actions\";\r\n\r\nconst options: Array<string> = [\r\n    'all',\r\n    'not performed',\r\n    'tags',\r\n];\r\n\r\nexport const FilterContainer: FC<IFilterContainerProps> = ({filter}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n\r\n    const handleButtonClick: IHandleButtonClick = event => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleMenuItemClick: IHandleMenuItemClick = (event, index) => {\r\n        setAnchorEl(null);\r\n        dispatch(setFilterActionCreator(options[index]));\r\n    };\r\n\r\n    const handleClose: IHandleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <Filter\r\n            filter={filter}\r\n            anchorEl={anchorEl}\r\n            handleButtonClick={handleButtonClick}\r\n            handleMenuItemClick={handleMenuItemClick}\r\n            handleClose={handleClose}\r\n            options={options}\r\n        />\r\n    )\r\n};","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        margin: '0 8px 8px'\r\n    }\r\n});\r\n\r\nexport default useStyles;","import React, {FC} from 'react';\r\nimport {Box} from \"@material-ui/core\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {ISortProps} from \"./SortTypes\";\r\nimport SortIcon from '@material-ui/icons/Sort';\r\nimport useStyles from \"./SortStyles\";\r\n\r\nexport const Sort: FC<ISortProps> = props => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Button onClick={props.handleButtonClick} startIcon={<SortIcon/>}>\r\n                <Typography variant=\"body2\">\r\n                    Sort by: {props.sortBy}\r\n                </Typography>\r\n            </Button>\r\n            <Menu\r\n                anchorEl={props.anchorEl}\r\n                keepMounted\r\n                open={Boolean(props.anchorEl)}\r\n                onClose={props.handleClose}\r\n            >\r\n                {props.options.map((option, index) =>\r\n                    <MenuItem\r\n                        key={option}\r\n                        selected={index === props.options.indexOf(props.sortBy)}\r\n                        onClick={(event) => props.handleMenuItemClick(event, index)}\r\n                    >\r\n                        {option}\r\n                    </MenuItem>\r\n                )}\r\n            </Menu>\r\n        </Box>\r\n    );\r\n};","import React, {FC} from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {\r\n    IHandleButtonClick,\r\n    IHandleClose,\r\n    IHandleMenuItemClick,\r\n    ISortContainerProps\r\n} from \"./SortTypes\";\r\nimport {Sort} from \"./Sort\";\r\nimport {setSortActionCreator} from \"../../../../store/list/actions\";\r\n\r\nconst options: Array<string> = [\r\n    'date',\r\n    'not performed',\r\n    'tags',\r\n];\r\n\r\nexport const SortContainer: FC<ISortContainerProps> = ({sortBy}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n\r\n    const handleButtonClick: IHandleButtonClick = event => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleMenuItemClick: IHandleMenuItemClick = (event, index) => {\r\n        setAnchorEl(null);\r\n        dispatch(setSortActionCreator(options[index]));\r\n    };\r\n\r\n    const handleClose: IHandleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <Sort\r\n            sortBy={sortBy}\r\n            anchorEl={anchorEl}\r\n            handleButtonClick={handleButtonClick}\r\n            handleMenuItemClick={handleMenuItemClick}\r\n            handleClose={handleClose}\r\n            options={options}\r\n        />\r\n    )\r\n};","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    }\r\n}));\r\n\r\nexport default useStyles;","import React, {FC} from 'react';\r\nimport {FilterContainer} from \"./Filter/FilterContainer\";\r\nimport {IToolsProps} from \"./ToolsTypes\";\r\nimport {SortContainer} from \"./Sort/SortContainer\";\r\nimport {Box} from \"@material-ui/core\";\r\nimport useStyles from \"./ToolsStyles\";\r\n\r\nexport const Tools: FC<IToolsProps> = ({filter, sortBy}) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Box className={classes.root}>\r\n            <FilterContainer filter={filter} />\r\n            <SortContainer sortBy={sortBy} />\r\n        </Box>\r\n    )\r\n};","import React, {FC} from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {AddContainer} from \"./Add/AddContainer\";\r\nimport {ListContainer} from \"./List/ListContainer\";\r\nimport {Message} from \"./Message/Message\";\r\nimport {IMainProps} from \"./MainTypes\";\r\nimport {Paginator} from \"./Paginator/Paginator\";\r\nimport useStyles from \"./MainStyles\";\r\nimport {Preloader} from \"./Preloader/Preloader\";\r\nimport {Tools} from \"./Tools/Tools\";\r\n\r\nexport const Main: FC<IMainProps> = props => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Paper className={classes.root} elevation={3}>\r\n            <AddContainer tasks={props.listState.tasks}/>\r\n            <Tools\r\n                filter={props.listState.filter}\r\n                sortBy={props.listState.sortBy}\r\n            />\r\n            <ListContainer\r\n                setOpenMessage={props.setOpenMessage}\r\n                tasks={props.listState.tasks}\r\n                pageNumber={props.pageNumber}\r\n                pageSize={props.pageSize}\r\n                filter={props.listState.filter}\r\n                sortBy={props.listState.sortBy}\r\n                initialized={props.initialized}\r\n            />\r\n            <Message\r\n                openMessage={props.openMessage}\r\n                setOpenMessage={props.setOpenMessage}\r\n            />\r\n            <Paginator\r\n                tasks={props.listState.tasks}\r\n                paginatorChange={props.paginatorChange}\r\n                pageSize={props.pageSize}\r\n            />\r\n            <Preloader initialized={props.initialized}/>\r\n        </Paper>\r\n    );\r\n};","import {IListState} from \"../store/list/types\";\r\n\r\nexport const apiLocalStorage = {\r\n    setState: (state: IListState) => {\r\n        localStorage.setItem('tasks', JSON.stringify(state));\r\n    },\r\n    getState: () => {\r\n        return JSON.parse(localStorage.getItem('tasks') as string);\r\n    }\r\n};\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport {IMessage, IPaginatorChange} from \"./MainTypes\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Main} from \"./Main\";\r\nimport {apiLocalStorage} from \"../../api/apiLocalStorage\";\r\nimport {IListState} from \"../../store/list/types\";\r\nimport {getStateThunkCreator} from \"../../store/list/thunks\";\r\nimport {RootStateType} from \"../../store/store\";\r\n\r\nexport const MainContainer = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const listState: IListState = useSelector((state: RootStateType): IListState => state.list);\r\n\r\n    const initialized: boolean = useSelector((state: RootStateType): boolean => state.app.initialized);\r\n\r\n    useEffect(() => {\r\n        dispatch(getStateThunkCreator())\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        apiLocalStorage.setState(listState);\r\n    }, [listState]);\r\n\r\n    const [openMessage, setOpenMessage] = useState<IMessage>({open: false, message: null});\r\n\r\n    const pageSize: number = 11;\r\n    const [pageNumber, setPageNumber] = useState<number>(1);\r\n    const paginatorChange: IPaginatorChange = (event, value) => {\r\n        setPageNumber(value);\r\n    };\r\n\r\n    return (\r\n        <Main\r\n            openMessage={openMessage}\r\n            setOpenMessage={setOpenMessage}\r\n            pageSize={pageSize}\r\n            pageNumber={pageNumber}\r\n            paginatorChange={paginatorChange}\r\n            listState={listState}\r\n            initialized={initialized}\r\n        />\r\n    );\r\n};","import {Dispatch} from \"redux\";\r\nimport {setStateActionCreator} from \"./actions\";\r\nimport {IListState, ISetStateAction} from \"./types\";\r\nimport {apiLocalStorage} from \"../../api/apiLocalStorage\";\r\nimport {initializedSuccessActionCreator} from \"../app/actions\";\r\nimport {IInitializedSuccessAction} from \"../app/types\";\r\n\r\nexport const getStateThunkCreator = () => (dispatch: Dispatch<ISetStateAction | IInitializedSuccessAction>) => {\r\n    const stateLocalStorage: IListState = apiLocalStorage.getState();\r\n    setTimeout(() => {\r\n        if (stateLocalStorage !== null) {\r\n            dispatch(setStateActionCreator(stateLocalStorage));\r\n        }\r\n        dispatch(initializedSuccessActionCreator(true))\r\n    }, 2000);\r\n};\r\n","import {INITIALIZED_SUCCESS} from \"./constants\";\r\nimport {IInitializedSuccessAction} from \"./types\";\r\n\r\nexport const initializedSuccessActionCreator = (initialized: boolean): IInitializedSuccessAction =>\r\n    ({type: INITIALIZED_SUCCESS, initialized});","export const INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';","import React from 'react';\r\nimport './App.css';\r\nimport {MainContainer} from './components/Main/MainContainer';\r\n\r\nexport const App = () => {\r\n\r\n    return (\r\n        <div className='App'>\r\n            <MainContainer/>\r\n        </div>\r\n    );\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app.ts load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app.ts is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app.ts. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {createMuiTheme, Theme} from \"@material-ui/core\";\r\nimport {indigo} from \"@material-ui/core/colors\";\r\n\r\nconst theme: Theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: indigo[400]\r\n        },\r\n        success: {\r\n            main: indigo[400]\r\n        }\r\n    }\r\n});\r\n\r\nexport default theme","import {\r\n    ADD_TASK,\r\n    DELETE_TASK,\r\n    SAVE_TASK,\r\n    SET_FILTER,\r\n    SET_PERFORMED,\r\n    SET_SORT,\r\n    SET_STATE,\r\n    SET_TAG\r\n} from \"./constants\";\r\nimport {ListActionType, IListState} from './types'\r\n\r\nconst initialState: IListState = {\r\n    tasks: [],\r\n    filter: 'all',\r\n    sortBy: 'date'\r\n};\r\n\r\nexport const reducer = (state = initialState, action: ListActionType): IListState => {\r\n    switch (action.type) {\r\n        case ADD_TASK: {\r\n            return {\r\n                ...state,\r\n                tasks: [...state.tasks, {id: action.id, text: action.text, isPerformed: false, isTagged: false, date: action.date}]\r\n            }\r\n        }\r\n        case DELETE_TASK: {\r\n            return {\r\n                ...state,\r\n                tasks: state.tasks.filter(i => i.id !== action.id)\r\n            }\r\n        }\r\n        case SET_PERFORMED: {\r\n            return {\r\n                ...state,\r\n                tasks: state.tasks.map(i => {\r\n                    if (i.id === action.id) {\r\n                        return {...i, isPerformed: !i.isPerformed}\r\n                    } else {\r\n                        return {...i}\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        case SAVE_TASK: {\r\n            return {\r\n                ...state,\r\n                tasks: state.tasks.map(i =>\r\n                    i.id === action.id\r\n                        ? {...i, text: action.text}\r\n                        : {...i}\r\n                )\r\n            }\r\n        }\r\n        case SET_STATE: {\r\n            return action.state\r\n        }\r\n        case SET_TAG: {\r\n            return {\r\n                ...state, tasks: state.tasks.map(i =>\r\n                    i.id === action.id\r\n                        ? {...i, isTagged: !i.isTagged}\r\n                        : {...i}\r\n                )\r\n            }\r\n        }\r\n        case SET_FILTER: {\r\n            return {\r\n                ...state, filter: action.option\r\n            }\r\n        }\r\n        case SET_SORT: {\r\n            return {\r\n                ...state, sortBy: action.option\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n};","import {IAppState, IInitializedSuccessAction} from \"./types\";\r\nimport {INITIALIZED_SUCCESS} from \"./constants\";\r\nimport {useMediaQuery} from \"react-responsive\";\r\n\r\nconst initialState: IAppState = {\r\n    initialized: false,\r\n    isMobile: useMediaQuery({ maxWidth: 600 })\r\n};\r\n\r\nexport const reducer = (state = initialState, action: IInitializedSuccessAction) => {\r\n    if (action.type === INITIALIZED_SUCCESS) {\r\n        return {\r\n            ...state,\r\n            initialized: action.initialized\r\n        }\r\n    } else return state\r\n};\r\n","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk'\r\nimport {reducer as listReducer} from \"./list/reducer\";\r\nimport {reducer as appReducer} from \"./app/reducer\";\r\n\r\nconst middlewares = [thunk]\r\n\r\nconst rootReducer = combineReducers({\r\n    list: listReducer,\r\n    app: appReducer\r\n});\r\n\r\nexport type RootStateType = ReturnType<typeof rootReducer> //ReturnType cоздаёт тип, состоящий из возвращаемого типа функции RootReducer\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {App} from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {ThemeProvider} from '@material-ui/core/styles';\r\nimport theme from \"./theme\";\r\nimport {Provider as StoreProvider} from \"react-redux\";\r\nimport {store} from \"./store/store\";\r\n\r\nReactDOM.render(\r\n    <StoreProvider store={store}>\r\n        <ThemeProvider theme={theme}>\r\n            <App/>\r\n        </ThemeProvider>\r\n    </StoreProvider>,\r\n    document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ViewContent\":\"ViewContent_ViewContent__WgEsj\"};"],"sourceRoot":""}